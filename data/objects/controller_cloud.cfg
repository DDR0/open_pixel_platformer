{
id: "controller_cloud",
zorder: "@include data/zorder.cfg:background_parallax_clouds",
always_active: true, //This is generally hard on performance, and should be used sparingly. In this case, since we want clouds on all the level, we'll always have the cloud controller active and drawing them.
hidden_in_game: true, //We don't want to the the /controller/ in-game, just the clouds.

editor_info: {
	category: "effects",
	help: "Place this controller on a level for clouds.",
},

properties: {
	particle_systems: "['clouds_small', 'clouds_large']",
},

on_create: "map(particle_systems, add_particles(value))",

on_done_create: "map(particle_systems, [
	set(sys.min_x, level.dimensions[0]-me.x-96*2),  //From the left side of the level: Less our x because it's relative to us. Less the size of the large cloud, so we never see it spawn. Double that because the zoom factor is 2 (for the chunky pixels effect).
	set(sys.max_x, level.dimensions[0]-me.x-96*2),  //All our clouds spawn from the left side of the level and scud over to the right.
	set(sys.min_y, level.dimensions[1]-me.y-32*2),
	set(sys.max_y, level.dimensions[3]-me.y),
	set(sys.pre_pump_cycles, cloud_travel_time),    //Move the clouds across the screen before the level starts, so we have some scenery to look at for the first half-hour.
	set(sys.time_to_live, cloud_travel_time), 
	set(sys.spawn_rate, round(max(1, 
		((level.dimensions[2] - level.dimensions[0]) * (level.dimensions[3] - level.dimensions[1])) / 2000000.0 //We want a spawn rate of about one cloud for every 2 million pixels of screen space. To get this, we calculate the width of the level, then the height of the height of the level. We multiply these together to get the area of the level we're drawing clouds on, and then see how many times 2000000 goes into it. Since spwan_rate only takes integers, we'll make sure we have at least a value of 1 so we spawn *something* and then round the result.
	))),
] where sys = me[value]
) where cloud_travel_time = (level.dimensions[2]-level.dimensions[0] + 96*2) / (100/1000.0)", //100 is the minimum speed of the cloud. It is defined in the particle system. We have to divide by 1000.0 because the speed is given in milli-pixels, and we want a decimal out of the equation.

animation: {
	id: "normal",
	image: "controllers.png",
	x:99, y:30, w:28, h:28,
},

particle_system: [
	{
		"@base": true,
		type: "simple",
		velocity_x: 125, //100, plus up to 50 because velocity_x_random cann add and subtract. The 100 value is important for time_to_live calculation in on_done_create.
		velocity_x_random: 25,
	},
	{
		id: "clouds_small",
		animation: {
			id: "small",
			image: "jungle/fluffy-clouds.png",
			x:0, y:32, w:64, h:32,
			duration: 1000000,
		},
	},{
		id: "clouds_large",
		animation: {
			id: "large",
			image: "jungle/fluffy-clouds.png",
			x:0, y:0, w:96, h:32, //The w value is important for min_x/max_x in on_done_create.
			duration: 1000000,
		},
	},
],
}